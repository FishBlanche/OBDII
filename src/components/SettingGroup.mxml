<?xml version="1.0" encoding="utf-8"?>
<mx1:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"  horizontalScrollPolicy="off" verticalScrollPolicy="off"
			xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx1="library://ns.adobe.com/flex/mx" width="400"  height="200"    addedToStage="toStage()">
	 
	<s:Image source="@Embed('assets/formbg.png')" width="400" height="200" smooth="true" cacheAsBitmap="true" scaleMode="stretch"/>
	
	<s:VGroup top="10" width="400" height=" 150"   left="10" right="10">
		<mx1:FormItem color="#ffffff"   styleName="myForm"  label="IP:"  width="100%" height="45"    labelWidth="65">
			
			<mx1:TextInput       id="serveripAddr" color="#ffffff" styleName="myTextInput" width="98%"/>
		</mx1:FormItem>
		<mx1:FormItem color="#ffffff" styleName="myForm" label="端口:" width="100%" height="45" labelWidth="65">
			<mx1:TextInput    id="serverportAddr" restrict="0-9" color="#ffffff" styleName="myTextInput"  width="98%"/>
		</mx1:FormItem>
		
		<mx1:Button fontFamily="Verdana" fontSize="24"  textRollOverColor="0xffffff" textSelectedColor="0xffffff"  skin="@Embed('assets/formbtnbg.png')"   overSkin="@Embed('assets/formbtndownbg.png')"  color="0xffffff"     id="submit1" click="serverOk_Handle()"  height="45"       width="100%"      label="确定"/>
		
	</s:VGroup>
	
	
	
	<fx:Style>
		.myForm
		{
			fontFamily:"Verdana";
			fontSize:24;
		}
		.myTextInput
		{
			borderSkin: Embed(source='assets/textBox.png');
			color: #000000;
			font-size:23;
			showPromptWhenFocused: false;
			fontFamily:"Verdana";
		}
		
	 
		
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import flash.utils.clearInterval;
			import flash.utils.setInterval;
			import mx.effects.Move;
			import mx.effects.easing.Bounce;
			import mx.events.EffectEvent;
			import mx.utils.StringUtil;
			import spark.managers.PersistenceManager;
		    var IpReg:RegExp =	/^((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]\d)|\d)(\.((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]\d)|\d)){3}$|^([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}$/;
            var persistencemanager:PersistenceManager=new PersistenceManager();
			private function toStage():void{
				if(persistencemanager.load())
				{ 
					if(persistencemanager.getProperty("serverIpAddr"))
					{
						serveripAddr.text=String(persistencemanager.getProperty("serverIpAddr"));
					}
					if(persistencemanager.getProperty("serverPortAddr"))
					{
						serverportAddr.text=String(persistencemanager.getProperty("serverPortAddr"));
					}
				}
			}
			
			private function serverOk_Handle():void{
				if((IpReg.test(StringUtil.trim(serveripAddr.text)))&&serverportAddr.text!="")
				{
					if(persistencemanager.load())
					{
						persistencemanager.setProperty("serverIpAddr",serveripAddr.text);
						persistencemanager.setProperty("serverPortAddr",serverportAddr.text);
						persistencemanager.setProperty("serverAddr","http://"+serveripAddr.text+":"+serverportAddr.text+"/obd_server/messagebroker/amf");
						persistencemanager.save();
					}
					dispatchEvent(new Event("setting_Complete",true));
				}
				else
				{
					if(!IpReg.test(StringUtil.trim(serveripAddr.text)))
					{
						shake(serveripAddr);
					}
					else
					{
						shake(serverportAddr);
					}
				}
			}
			private function shake(dis:TextInput,times:uint = 2,offset:uint = 4,speed:uint = 32):void {  
				
				var point:Point = new Point(dis.x,dis.y);  
				var offsetXYArray:Array = [0,0];  
				var num:int = 0;  
				var u:int = setInterval(function():void {  
					offsetXYArray[num%2] = (num++)%4<2 ?0:offset;  
					if(num>(times*4 + 1)){  
						clearInterval(u);  
						num = 0;  
					}  
					dis.x = offsetXYArray[0] + point.x;  
					//dis.y = offsetXYArray[1] + point.y;  
				},speed);  
			}  
		]]>
	</fx:Script>
</mx1:Canvas>
